// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: stats.sql

package db

import (
	"context"
	"database/sql"
)

const getStats = `-- name: GetStats :one
SELECT SUM(size) AS bytes_stored,
       COUNT(*) AS blob_count,
       COUNT(DISTINCT(pubkey)) AS pubkey_count
FROM blobs
`

type GetStatsRow struct {
	BytesStored sql.NullFloat64
	BlobCount   int64
	PubkeyCount int64
}

func (q *Queries) GetStats(ctx context.Context) (GetStatsRow, error) {
	row := q.db.QueryRowContext(ctx, getStats)
	var i GetStatsRow
	err := row.Scan(&i.BytesStored, &i.BlobCount, &i.PubkeyCount)
	return i, err
}
